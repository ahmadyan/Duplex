@include "generic.cfg" @ifExists ;

# dido isoperimetric optimization problem
# Copied from D. Liberzon's "Calculus of Variations and optimal control theory", page 26.
# includes 3 boundary conditions, y(a) = y(b) = 0, length(y)=c0
# minimize the area inside the curve y
# optimal answer should look like an arc from a circle

Duplex {
	mode = "fopt";
	iterations = "100";
	output = working_directory + "dido.png";
    savefile = working_directory + "dido.xml" ;
	initial_state_assignment = "assigned";
    plot{
		uid-plot{
			type = "tree.parameter";
			x="0";		
			y="1";		
		}
		uid-plot{
			type = "tree.objective";
			x="1";		
			y="2";		
		}
		uid-plot{
			type = "distance";	
		}
	};

	simulation{		
        engine = "internal";			#["hspice", "internal"];		
    };

	initialPathSegments="20";
    ############################		
	# Parameter list 		
	############################		
    parameter {		
        size = "2";
		b="50";			# boundary value for b
		c0="200";			# boundary value for length of the curve		
        uid-parameter {		
            name = "x";		
            comment = "x";		
            range {		
                min = "0";		
                max = "100";		
            };		
            init = "0";					#can also be random, may be overridden if the initial state is random		
            unit = "u";		
        };		
        		
        uid-parameter {		
            name = "y";		
            comment = "y";		
            range {		
                min = "0";		
                max = "60";		#max can be 50		
            };		
            init = "0";		
            unit = "u";		
        };	
    };		
			
	############################		
	# Performance metric list 		
	############################		
    objective {		
        size = "3";		
        uid-objective {		
            name = "b";		
			keyword = "boundary condition";		
			function = "x";			
            comment = "setting the boundary condition";		
            goal {		
				mode = "boundary";
                optimum = "100";		
                min = "100";		
                max = "100";		
            };		
            min = "0";		
            max = "100";		
        };		
		uid-objective {		
            name = "l";		
			keyword = "lengh";		
			function = "#L";			
            comment = "length of the curve";		
            goal {		
				mode = "boundary-hard";
                optimum = "100";		
                min = "0";		
                max = "100";		
            };		
            min = "0";		
            max = "200";		
        };
		uid-objective {		
            name = "a";		
			keyword = "area";		
			function = "#A";			
            comment = "area of the curve";		
            goal {		
				mode = "maximize";
                optimum = "1000";		
                min = "0";		
                max = "1000";		
            };		
            min = "0";		
            max = "5000";		
        };
    };
};

