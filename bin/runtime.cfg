Duplex {
	iterations = "100";
	output = "output.png";
	parameters = "2";
	objectives = "2";
	dimensions = "2";
	initial_state_assignment = "random"; #["random", "assigned"]

	#controls the rate of temperature descrese in Duplex
	temperature = "exp"; #["fast", "boltz", "exp"]
	#Annealing option describes how far the next input should be from the current input
	annealing = "fast-random"; #["fast", "boltz", "fast-random", "boltz-random"]
	initial_temperature = "1";
	initial_step_length = "1";
	
	
	#reinforcement learning options
	reinforcement_learning = "true";
	min_reward = "0.2";
	max_reward = "5";
	delta_reward = "1";

	simulation{
		#spice simulation options
		engine = "internal"; #"hspice";
		template = "opamp_template.sp";
		netlist = "opamp_netlist.sp";
		time = "0.001";
	}
	
	############################
	# Parameter list 
	############################
	uid-parameter {
		name = "x";
		comment = "parameter x";
		range {
			min = "-2";
			max = "4";
		}
		init = "0";		#can also be random, may be overridden if the initial state is random
	}
	
	uid-parameter {
		name = "y";
		comment = "parameter y";
		range {
			min = "-2";
			max = "4";
		}
		init = "0";
	}

	############################
	# Performance metric list 
	############################
	uid-performance {
		name = "gain";
		comment = "Measure Open-loop Gain (Gain)  (dB)";
		goal = "2";
		min = "0";
		max = "0";
	}
	uid-performance {
		name = "bandwidth";
		comment = "Measure Unity-gain Frequency";
		goal = "0";
		min = "2";
		max = "0";
	}
	uid-performance {
		name = "PM";
		comment = " Measure Phase margin  (PM)  (deg)";
		goal = "0";
		min = "0";
		max = "0";
	}
	uid-performance {
		name = "GM";
		comment = "Measure Gain Margin (GM)  (dB)";
		ideal = "0";
		min = "0";
		max = "0";
	}
}
