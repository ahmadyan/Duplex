@include "generic.cfg" @ifExists ;


Duplex {
	#controls the rate of temperature decrease in Duplex
	temperature = "fast"; #["fast", "boltz", "exp"]
	#Annealing option describes how far the next input should be from the current input
	annealing = "fast-random"; #["fast", "boltz", "fast-random", "boltz-random"]
	initial_temperature = "15";
	initial_step_length = "20";
	output = working_directory + "eggholder.png";
    savefile = working_directory + "eggholder.xml" ;
	iterations = "1000";
	initial_state_assignment = "assigned"; #["random", "assigned"]
	#reinforcement learning options
	reinforcement_learning = "false";
	min_reward = "0.2";
	max_reward = "5";
	delta_reward = "1";
	shrink_goal_region_with_temperate = "enable";
    plot{
        enable="true";      #["true", "false"]
		# determines the type of the plot. Can be the error time-series ("error"), distance time-series ("distance"),
		# parameter tree ("tree.parameter") and objective-tree ("tree.objective")
		type = "tree.parameter";
        @if (osType() == "windows") {
            gnuplot = "C:\\opt\\gnuplot\\bin\\gnuplot.exe -persist";
        } @else {
            gnuplot = "/usr/local/bin/gnuplot";
        }
    };

	sensitivity-analysis {
		enable="false";
		mode="delta";
		relativeSensitivityThreshold = "0.0";
	};

	simulation{		
        engine = "internal";			#["hspice", "internal"];		
    };
    ############################		
	# Parameter list 		
	############################		
    parameter {		
        size = "2";		
        uid-parameter {		
            name = "x";		
            comment = "parameter x";		
            range {		
                min = "-512";		
                max = "512";		
            };		
            init = "0";					#can also be random, may be overridden if the initial state is random		
            unit = "u";		
        };		
        		
        uid-parameter {		
            name = "y";		
            comment = "parameter y";		
            range {		
                min = "-512";		
                max = "512";		
            };		
            init = "0";		
            unit = "u";		
        };	

    };		
			
			
	############################		
	# Performance metric list 		
	############################		
    objective {		
        size = "1";		
        uid-objective {		
            name = "f";		
			keyword = "f";		
			#function = "-(y+47)*sin(y)-x*sin(x)";			# https://en.wikipedia.org/wiki/Test_functions_for_optimization		
			function = "-(y+47)*sin(sqrt(abs(y +(x/2)+47)))-x*sin(sqrt(abs(x-y-47)))";			# https://en.wikipedia.org/wiki/Test_functions_for_optimization	
            comment = "output 1";		
            goal {		
                optimum = "-959.64";		
                min = "-3000";		
                max = "1500";		
            };		
            min = "-1000";		
            max = "1500";		
        };		
    };
};
