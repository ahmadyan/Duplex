Duplex {
    @if (osType() == "windows") {
        working_directory = "C:\\Users\\adel\\code\\Duplex\\bin\\";
    } @else {
        working_directory = "/Users/adel/Dropbox/temporary/bin/";
    }
    
    mode = "opt"; #["opt", "load"]
    iterations = "100";
    output = working_directory + "output.png";
    savefile = working_directory + "save" + getenv("DUPLEX_SIM_ID") + ".xml" ;
    dimensions = "2";
    initial_state_assignment = "random"; #["random", "assigned"]
    
    #controls the rate of temperature descrese in Duplex
    temperature = "fast"; #["fast", "boltz", "exp"]
    #Annealing option describes how far the next input should be from the current input
    annealing = "fast-random"; #["fast", "boltz", "fast-random", "boltz-random"]
    initial_temperature = "2";
    initial_step_length = "1";
    
    #reinforcement learning options
    reinforcement_learning = "false";
    min_reward = "0.2";
    max_reward = "5";
    delta_reward = "1";
    
    plot{
        enable="true";      #["true", "false"]
		# determines the type of the plot. Can be the error time-series ("error"), distance time-series ("distance"),
		# parameter tree ("tree.parameter") and objective-tree ("tree.objective")
		type = "error";	
        @if (osType() == "windows") {
            gnuplot = "C:\\opt\\gnuplot\\bin\\gnuplot.exe -persist";
        } @else {
            gnuplot = "/usr/local/bin/gnuplot";
        }
    };
    
    simulation{
        #spice simulation options
        engine = "internal"; #["hspice", "internal"];
        template = working_directory + "inv_template.sp";
        netlist = working_directory + "inv_netlist.sp";
        logfile = working_directory + "sim.log";
        time = "0.001";
    };

	############################
	# Parameter list 
	############################
    parameter {
        size = "2";
        uid-parameter {
            name = "x";
            comment = "parameter x";
            range {
                min = "-2";
                max = "4";
            };
            init = "0";		#can also be random, may be overridden if the initial state is random
            unit = "u";
        };
        
        uid-parameter {
            name = "y";
            comment = "parameter y";
            range {
                min = "-2";
                max = "4";
            };
            init = "0";
            unit = "u";
        };
    };
	
	
	############################
	# Performance metric list 
	############################
    objective {
        size = "2";
        uid-objective {
            name = "i";
			keyword = "i";
            comment = "Measure Open-loop Gain (Gain)  (dB)";
            goal = "2";
            min = "0";
            max = "0";
        };
        uid-objective {
            name = "j";
			keyword = "j";
            comment = "Measure Unity-gain Frequency";
            goal = "1";
            min = "2";
            max = "0";
        };    };
};
